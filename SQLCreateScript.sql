-- MySQL Script generated by MySQL Workbench
-- Fri Feb 17 12:15:41 2023
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema applicantdb
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema applicantdb
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `applicantdb` DEFAULT CHARACTER SET utf8 ;
USE `applicantdb` ;

-- -----------------------------------------------------
-- Table `applicantdb`.`faculty`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `applicantdb`.`faculty` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(64) NOT NULL,
  `abbr` VARCHAR(16) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `applicantdb`.`subjects`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `applicantdb`.`subjects` (
  `id` INT NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `applicantdb`.`specializations`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `applicantdb`.`specializations` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `faculty_id` INT NOT NULL,
  `name` VARCHAR(128) NOT NULL,
  `code` VARCHAR(45) NOT NULL,
  `budged_places` INT NOT NULL,
  `paid_places` INT NOT NULL,
  `first_subj` INT NOT NULL,
  `second_subj` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `faculty-spec_idx` (`faculty_id` ASC) VISIBLE,
  INDEX `first_sub_idx` (`first_subj` ASC) VISIBLE,
  INDEX `sec_sub_idx` (`second_subj` ASC) VISIBLE,
  CONSTRAINT `faculty-spec`
    FOREIGN KEY (`faculty_id`)
    REFERENCES `applicantdb`.`faculty` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION,
  CONSTRAINT `first_sub`
    FOREIGN KEY (`first_subj`)
    REFERENCES `applicantdb`.`subjects` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `sec_sub`
    FOREIGN KEY (`second_subj`)
    REFERENCES `applicantdb`.`subjects` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `applicantdb`.`applicants`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `applicantdb`.`applicants` (
  `id` INT NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  `surname` VARCHAR(45) NOT NULL,
  `patronymic` VARCHAR(45) NOT NULL,
  `language` INT NOT NULL,
  `first` INT NOT NULL,
  `second` INT NOT NULL,
  `mark` INT NOT NULL,
  `on_paid_base` TINYINT(1) NOT NULL DEFAULT 0,
  `faculty_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fac_idx` (`faculty_id` ASC) VISIBLE,
  CONSTRAINT `fac`
    FOREIGN KEY (`faculty_id`)
    REFERENCES `applicantdb`.`faculty` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `applicantdb`.`app-spec`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `applicantdb`.`app-spec` (
  `applecant_id` INT NOT NULL,
  `number` INT NOT NULL,
  `spec_id` INT NOT NULL,
  INDEX `app_idx` (`applecant_id` ASC) VISIBLE,
  INDEX `spec_idx` (`spec_id` ASC) VISIBLE,
  CONSTRAINT `app`
    FOREIGN KEY (`applecant_id`)
    REFERENCES `applicantdb`.`applicants` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION,
  CONSTRAINT `spec`
    FOREIGN KEY (`spec_id`)
    REFERENCES `applicantdb`.`specializations` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
